name: build
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  REPO: 'aseprite/aseprite'
  BUILD_PATH: 'D:/a/aseprite-windows/aseprite-windows/build/bin'
  UPLOAD_RELEASE: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: windows-latest
            build_type: Release
            enable_ui: on
    steps:
    - name: Get latest aseprite/aseprite release tag
      id: aseprite_release
      shell: bash
      run: |
        latest_tag=$(curl -s https://api.github.com/repos/aseprite/aseprite/releases/latest | jq -r .tag_name)
        my_latest_tag=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[0].tag_name')
        if [[ "$latest_tag" == "$my_latest_tag" ]]; then
          echo "skip_build=true" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "aseprite_tag=$latest_tag" >> $GITHUB_OUTPUT
          echo "skip_build=false" >> $GITHUB_OUTPUT
        fi
    - name: Stop if no new release
      if: steps.aseprite_release.outputs.skip_build == 'true'
      run: exit 0
    - uses: actions/checkout@v3
      with:
        repository: ${{ env.REPO }}
        ref: ${{ steps.aseprite_release.outputs.aseprite_tag }}
        submodules: 'recursive'
    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
    - name: Generating Makefiles
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]] ; then
          export enable_ccache=off
        else
          export enable_ccache=on
        fi
        curl -L https://github.com/aseprite/skia/releases/download/m124-08a5439a6b/Skia-Windows-Release-x64.zip --output skia.zip
        7z x skia.zip -oskia
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DENABLE_UI=${{ matrix.enable_ui }} \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=./skia \
          -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \
          -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja
    - uses: actions/upload-artifact@v4
      with:
        name: aseprite-windows
        path: |
          ${{ env.BUILD_PATH }}/data
          ${{ env.BUILD_PATH }}/aseprite.exe
    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        7z a ${{ env.BUILD_PATH }}/aseprite.7z ${{ env.BUILD_PATH }}/data ${{ env.BUILD_PATH }}/aseprite.exe
        echo "::set-output name=release_tag::${{ steps.aseprite_release.outputs.aseprite_tag }}"
        touch release.txt
        echo "Aseprite ${{ steps.aseprite_release.outputs.aseprite_tag }}" >> release.txt
    - name: Upload build to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.conclusion == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          ${{ env.BUILD_PATH }}/aseprite.7z 
