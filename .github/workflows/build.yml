name: build
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ref:
        description: 'branch/tag ref'
        required: false
        default: 'main'
env:
  REPO: 'aseprite/aseprite'
  BUILD_PATH: 'D:/a/aseprite-windows/aseprite-windows/build/bin'
  UPLOAD_RELEASE: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: windows-latest
            build_type: Release
            enable_ui: on
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ env.REPO }}
        ref: ${{ github.event.inputs.ref }}
        submodules: 'recursive'
    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
    - name: Generating Makefiles
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]] ; then
          export enable_ccache=off
        else
          export enable_ccache=on
        fi
        curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --output skia.zip
        7z x skia.zip
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DENABLE_UI=${{ matrix.enable_ui }} \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=./skia \
          -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \
          -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja
    - uses: actions/upload-artifact@v4
      with:
        name: aseprite-windows
        path: |
          ${{ env.BUILD_PATH }}/data
          ${{ env.BUILD_PATH }}/aseprite.exe
    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        7z a ${{ env.BUILD_PATH }}/aseprite.7z ${{ env.BUILD_PATH }}/data ${{ env.BUILD_PATH }}/aseprite.exe
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "Aseprite ${{ github.event.inputs.ref }}" >> release.txt
    - name: Upload build to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.conclusion == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          ${{ env.BUILD_PATH }}/aseprite.7z 
