name: build
on:
  workflow_dispatch:

env:
  REPO: 'aseprite/aseprite'
  SKIA_DIR: ${{ github.workspace }}\skia
  SKIA_LIBRARY_DIR: ${{ github.workspace }}\skia\out\Release-x64
  SKIA_LIBRARY: ${{ github.workspace }}\skia\out\Release-x64\skia.lib
  BUILD_PATH: '${{ github.workspace }}/build/bin'
  UPLOAD_RELEASE: true
jobs:
  pre-check:
    runs-on: ubuntu-latest
    outputs:
      skip_build: ${{ steps.check.outputs.skip_build }}
      aseprite_tag: ${{ steps.check.outputs.aseprite_tag }}
    steps:
    - name: Get latest aseprite/aseprite release tag
      id: check
      shell: bash
      run: |
        latest_tag=$(curl -s https://api.github.com/repos/aseprite/aseprite/releases/latest | jq -r .tag_name)
        my_latest_tag=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases | jq -r 'if type == "array" and length > 0 then .[0].tag_name else empty end')
        echo "latest_tag: $latest_tag"
        echo "my_latest_tag: $my_latest_tag"
        if [[ -z "$latest_tag" || "$latest_tag" == "null" ]]; then
          echo "skip_build=true" >> $GITHUB_OUTPUT
          exit 0
        fi
        if [[ "$latest_tag" == "$my_latest_tag" ]]; then
          echo "skip_build=true" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "aseprite_tag=$latest_tag" >> $GITHUB_OUTPUT
          echo "skip_build=false" >> $GITHUB_OUTPUT
        fi
  build:
    runs-on: ${{ matrix.os }}
    needs: pre-check
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: windows-latest
            build_type: Release
            enable_ui: on
    if: needs.pre-check.outputs.skip_build == 'false'
    steps:
    - name: Checkout Aseprite source code
      uses: actions/checkout@v3
      with:
        repository: ${{ env.REPO }}
        ref: ${{ needs.pre-check.outputs.aseprite_tag }}
        submodules: 'recursive'

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@v4

    - name: Setup Skia (download pre-built)
      run: |
        curl -L -o skia.zip https://github.com/aseprite/skia/releases/download/m124-08a5439a6b/Skia-Windows-Release-x64.zip
        7z x skia.zip -oskia

    - name: Setup MSVC environment
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure with CMake
      run: |
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLAF_BACKEND=skia -DSKIA_DIR="${{ env.SKIA_DIR }}" -DSKIA_LIBRARY_DIR="${{ env.SKIA_LIBRARY_DIR }}" -DSKIA_LIBRARY="${{ env.SKIA_LIBRARY }}" ..

    - name: Build
      run: |
        cd build
        ninja aseprite

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: aseprite-windows
        path: |
          ${{ env.BUILD_PATH }}/data
          ${{ env.BUILD_PATH }}/aseprite.exe
    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        7z a ${{ env.BUILD_PATH }}/aseprite.7z ${{ env.BUILD_PATH }}/data ${{ env.BUILD_PATH }}/aseprite.exe
        touch release.txt
        echo "Aseprite ${{ needs.pre-check.outputs.aseprite_tag }}" >> release.txt
    - name: Upload build to release
      uses: softprops/action-gh-release@v2
      if: steps.tag.conclusion == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.pre-check.outputs.aseprite_tag }}
        body_path: release.txt
        files: |
          ${{ env.BUILD_PATH }}/aseprite.7z
